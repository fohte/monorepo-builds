version: 2

defaults: &defaults
  docker:
    - image: circleci/node:8.2.1
  working_directory: ~/monorepo-builds

jobs:
  clone_and_hash:
    <<: *defaults
    steps:
      - checkout
      - restore_cache:
          keys:
            - v1-project-hashes-{{ .Branch }}
            - v1-project-hashes-master

      - run:
          name: Copy old hashes to shared workspace
          command: |
            mkdir -p .project-hashes
            cp .project-a-hash .project-hashes
            cp .project-b-hash .project-hashes

      - run:
          name: Hash Projects
          command: |
            git log --pretty=format:'%H' -n 1 -- project_a > .project-hashes/.project-a-hash.new
            git log --pretty=format:'%H' -n 1 -- project_b > .project-hashes/.project-b-hash.new

      - run:
          name: Determine Changed Projects
          command: |
            if ! diff .project-hashes/.project-a-hash{,.new} > /dev/null; then
              touch .project-hashes/.project-a-changed
            fi

            if ! diff .project-hashes/.project-b-hash{,.new} > /dev/null; then
              touch .project-hashes/.project-b-changed
            fi

      - run:
          name: Set current project hashes
          command: |
            mv .project-hashes/.project-a-hash{.new,}
            mv .project-hashes/.project-b-hash{.new,}

      - persist_to_workspace:
          root: .
          paths:
            - .project-hashes

      - save_cache:
          key: v1-project-hashes-{{ .Branch }}-{{ epoch }}
          paths:
            - .project-hashes/.project-a-hash
            - .project-hashes/.project-b-hash

  project_a:
    <<: *defaults
    working_directory: ~/monorepo-builds/project_a
    steps:
      - checkout:
          path: ~/monorepo-builds
      - run:
          name: Install dependencies
          command: echo "install"

      - run:
          name: Build
          command: echo "Building Project A"

      - run:
          name: Test
          command: echo "Testing Project A"

      - run:
          name: Deployment
          command: |
            if [ "${CIRCLE_BRANCH}" == "master" ]; then
              echo "Deploying Project A"
            fi

  project_b:
    <<: *defaults
    working_directory: ~/monorepo-builds/project_b
    steps:
      - checkout:
          path: ~/monorepo-builds
      - run:
          name: Install dependencies
          command: echo "install"

      - run:
          name: Build
          command: echo "Building Project B"

      - run:
          name: Test
          command: echo "Testing Project B"

      - run:
          name: Deployment
          command: |
            if [ "${CIRCLE_BRANCH}" == "master" ]; then
              echo "Deploying Project B"
            fi

workflows:
  version: 2

  build_test_deploy:
    jobs:
      - clone_and_hash
      - project_a:
          requires:
            - clone_and_hash
      - project_b:
          requires:
            - clone_and_hash
